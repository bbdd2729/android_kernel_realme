name: Reusable Kernel Builder
on:
  workflow_call:
    inputs:
      sukisu_ref:
        description: 'SukiSU branch/tag (empty = main)'
        type: string
        default: ''
      defconfig:
        description: 'defconfig name'
        type: string
        default: vendor/kona-perf_defconfig
      artifact_name:
        description: 'upload artifact name'
        type: string
        default: kernel-out
      arch:
        description: 'ARCH'
        type: string
        default: arm64
      cross_compile:
        description: 'CROSS_COMPILE prefix'
        type: string
        default: aarch64-linux-gnu-

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        run: sudo rm -rf /usr/share/dotnet /opt/ghc

      - uses: actions/checkout@v4

      # ---------- deps ----------
      - name: Install deps
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            build-essential bc bison flex libssl-dev libelf-dev python3 python3-setuptools \
            git wget curl ca-certificates gcc make rsync libncurses-dev cpio unzip \
            gcc-aarch64-linux-gnu ccache

      # ---------- cache clang ----------
      - name: Cache Clang
        id: cache-clang
        uses: actions/cache@v4
        with:
          path: ~/clang-tools
          key: clang-zyc-10.0.1-20220724

      - name: Download Clang
        if: steps.cache-clang.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/clang-tools
          wget -q https://github.com/ZyCromerZ/Clang/releases/download/10.0.1-20220724-release/Clang-10.0.1-20220724.tar.gz
          tar -xzf Clang-10.0.1-20220724.tar.gz -C ~/clang-tools
          rm Clang-10.0.1-20220724.tar.gz

      # ---------- cache ccache ----------
      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ccache-${{ runner.os }}-${{ inputs.defconfig }}-${{ github.sha }}
          restore-keys: |
            ccache-${{ runner.os }}-${{ inputs.defconfig }}-

      # ---------- ccache env ----------
      - name: Setup ccache
        run: |
          ccache -o max_size=2G
          ccache -z

      # ---------- optional SukiSU ----------
      - name: Inject SukiSU
        env:
          SUKISU_REF: ${{ inputs.sukisu_ref }}
        run: |
          REF_ARG=""
          [ -n "$SUKISU_REF" ] && REF_ARG="--branch=$SUKISU_REF"
          curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s nongki $REF_ARG

      # ---------- build ----------
      - name: Configure & Build
        run: |
          export KBUILD_BUILD_HOST=gh-actions
          export PATH="$HOME/clang-tools/bin:$PATH"
          export CROSS_COMPILE=${{ inputs.cross_compile }}
          export ARCH=${{ inputs.arch }}
          export LLVM=1
          export CCACHE_DIR=~/.ccache
          export CC="ccache clang"

          OUT="$HOME/out"
          rm -rf "$OUT" && mkdir -p "$OUT"

          make O="$OUT" LLVM=1 ${{ inputs.defconfig }}

          scripts/config --file "$OUT/.config" \
            --enable KSU --enable KSU_KPM --enable KSU_SUSFS \
            --enable KSU_MANUAL_HOOK --enable KALLSYMS --enable KALLSYMS_ALL

          make O="$OUT" LLVM=1 -j$(nproc)

          ccache -s

      # ---------- upload ----------
      - name: Upload kernel out
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: ~/out
